% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/data-nihexporter.R
\name{nihexporter}
\alias{has_nihexporter}
\alias{nihexporter}
\alias{nihexporter_bigquery}
\alias{nihexporter_df}
\alias{nihexporter_dt}
\alias{nihexporter_monetdb}
\alias{nihexporter_mysql}
\alias{nihexporter_postgres}
\alias{nihexporter_sqlite}
\alias{nihexporter_srcs}
\title{Cache and retrieve an \code{src_sqlite} of the nihexporter database.}
\usage{
nihexporter_sqlite()

nihexporter_postgres(...)

nihexporter_mysql(...)

nihexporter_monetdb(...)

nihexporter_df()

nihexporter_dt()

nihexporter_bigquery(...)

has_nihexporter(type, ...)

nihexporter_srcs(..., quiet = NULL)
}
\arguments{
\item{...}{Arguments passed to \code{src} on first
  load. For mysql and postgresql, the defaults assume you have a local
  server with \code{nihexporter} database already created. For bigquery,
  it assumes you have read/write access to a project called
  \code{Sys.getenv("BIGQUERY_PROJECT")}

  For \code{nihexporter_srcs}, character vector of names giving srcs to generate.}

\item{type}{src type.}

\item{quiet}{if \code{TRUE}, suppress messages about databases failing to
connect.}
}
\description{
This creates a database using data from the nihexporter
data source, provided
through the \pkg{nihexporter} package by Jay Hesselberth.
See the documentation
for that package for documentation of the inidividual tables.
}
\examples{
# Connect to a local sqlite database, if already created
if (require("RSQLite") && has_nihexporter("sqlite")) {
  nihexporter_sqlite()
  projects <- tbl(nihexporter_sqlite(), "projects")
  projects
}

# Connect to a local postgres database with nihexporter database, if available
if (require("RPostgreSQL") && has_nihexporter("postgres")) {
  nihexporter_postgres()
  projects <- tbl(nihexporter_postgres(), "projects")
}
}

